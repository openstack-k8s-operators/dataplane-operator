apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm
spec:
  services:
  - bootstrap
  - download-cache
  - configure-network
  - validate-network
  - install-os
  - configure-os
  - run-os
  - reboot-os
  - ovn
  - neutron-metadata
  - libvirt
  - nova
  - telemetry
  preProvisioned: true
  nodes:
    edpm-compute-0:
      role: edpm-compute
      hostName: edpm-compute-0
      ansible:
        ansibleHost: 192.168.122.100
        ansibleVars:
          ctlplane_ip: 192.168.122.100
          internal_api_ip: 172.17.0.100
          storage_ip: 172.18.0.100
          tenant_ip: 172.19.0.100
          fqdn_internal_api: edpm-compute-0.example.com
  networkAttachments:
  - ctlplane
  nodeTemplate:
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    managementNetwork: ctlplane
    ansible:
      ansibleUser: cloud-admin
      ansiblePort: 22
      ansibleVars:
        service_net_map:
          nova_api_network: internal_api
          nova_libvirt_network: internal_api
        timesync_ntp_servers:
          - hostname: pool.ntp.org
        # edpm_network_config
        # Default nic config template for a EDPM compute node
        # These vars are edpm_network_config role vars
        edpm_network_config_hide_sensitive_logs: false
        edpm_network_config_template: |
          ---
          {% set mtu_list = [ctlplane_mtu] %}
          {% for network in role_networks %}
          {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
          {%- endfor %}
          {% set min_viable_mtu = mtu_list | max %}
          dns-resolver:
            config:
              search: {{ dns_search_domains }}
              server: {{ ctlplane_dns_nameservers }}
          interfaces:
            - name: {{ neutron_public_interface_name }}
              type: ethernet
              state: up
            - name: {{ neutron_physical_bridge_name }}
              type: ovs-interface
              state: up
              mtu: {{ min_viable_mtu }}
              ipv4:
                enabled: true
                address:
                  - ip: {{ ctlplane_ip }}
                    prefix-length: {{ ctlplane_subnet_cidr }}
          {% for network in role_networks %}
            - name: {{ "vlan" ~ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
              type: ovs-interface
              state: up
              mtu: {{ lookup('vars', networks_lower[network] ~ '_mtu') }}
              ipv4:
                enabled: true
                address:
                  - ip: {{ lookup('vars', networks_lower[network] ~ '_ip') }}
                    prefix-length: {{ lookup('vars', networks_lower[network] ~ '_cidr') }}
          {% endfor %}
            - name: {{ neutron_physical_bridge_name }}
              type: ovs-bridge
              bridge:
                options:
                  fail-mode: standalone
                port:
                - name: {{ neutron_public_interface_name }}
                - name: {{ neutron_physical_bridge_name }}
          {% for network in role_networks %}
                - name: {{ "vlan" ~ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
                  vlan:
                    mode: access
                    tag: {{ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
          {% endfor %}
          routes:
            config:
            - destination: {{ ctlplane_host_routes.ip_netmask }}
              next-hop-address: {{ ctlplane_host_routes.next_hop }}
              next-hop-interface: {{ neutron_physical_bridge_name }}
        # edpm_network_config - nmstate
        edpm_network_config_tool: 'nmstate'
        # These vars are for the network config templates themselves and are
        # considered EDPM network defaults.
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eth0
        ctlplane_mtu: 1500
        ctlplane_subnet_cidr: 24
        ctlplane_gateway_ip: 192.168.122.1
        ctlplane_host_routes:
        - ip_netmask: 0.0.0.0/0
          next_hop: 192.168.122.1
        external_mtu: 1500
        external_vlan_id: 44
        external_cidr: '24'
        internal_api_mtu: 1500
        internal_api_vlan_id: 20
        internal_api_cidr: '24'
        storage_mtu: 1500
        storage_vlan_id: 21
        storage_cidr: '24'
        tenant_mtu: 1500
        tenant_vlan_id: 22
        tenant_cidr: '24'
        role_networks:
        - InternalApi
        - Storage
        - Tenant
        networks_lower:
          External: external
          InternalApi: internal_api
          Storage: storage
          Tenant: tenant
        # edpm_nodes_validation
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        ctlplane_dns_nameservers:
        - 192.168.122.1
        dns_search_domains: []
        gather_facts: false
        enable_debug: false
        # edpm firewall, change the allowed CIDR if needed
        edpm_sshd_configure_firewall: true
        edpm_sshd_allowed_ranges: ['192.168.122.0/24']
        # SELinux module
        edpm_selinux_mode: enforcing
